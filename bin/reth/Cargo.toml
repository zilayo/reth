[package]
name = "reth"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Reth node implementation"
default-run = "reth"

[lints]
workspace = true

[package.metadata.cargo-udeps.ignore]
normal = [
    # Used for diagrams in docs
    "aquamarine",
]

[dependencies]
# reth
reth-config.workspace = true
reth-primitives = { workspace = true, features = ["arbitrary", "clap"] }
reth-db = { workspace = true, features = ["mdbx"] }
reth-provider = { workspace = true }
reth-revm.workspace = true
reth-stages.workspace = true
reth-interfaces = { workspace = true, features = ["clap"] }
reth-transaction-pool.workspace = true
reth-beacon-consensus.workspace = true
reth-auto-seal-consensus.workspace = true
reth-consensus-common.workspace = true
reth-blockchain-tree.workspace = true
reth-rpc-engine-api.workspace = true
reth-rpc-builder.workspace = true
reth-rpc.workspace = true
reth-rpc-types.workspace = true
reth-rpc-types-compat.workspace = true
reth-rpc-api = { workspace = true, features = ["client"] }
reth-network = { workspace = true, features = ["serde"] }
reth-network-api.workspace = true
reth-downloaders.workspace = true
reth-tracing.workspace = true
reth-tasks.workspace = true
reth-optimism-payload-builder = { workspace = true, optional = true }
reth-ethereum-payload-builder.workspace = true
reth-payload-builder.workspace = true
reth-payload-validator.workspace = true
reth-basic-payload-builder.workspace = true
reth-discv4.workspace = true
reth-prune.workspace = true
reth-snapshot = { workspace = true, features = ["clap"] }
reth-trie.workspace = true
reth-nippy-jar.workspace = true
reth-node-api.workspace = true
reth-node-ethereum.workspace = true
reth-node-optimism = { workspace = true, optional = true, features = [
    "optimism",
] }
reth-node-core.workspace = true

# crypto
alloy-rlp.workspace = true
alloy-chains.workspace = true
secp256k1 = { workspace = true, features = [
    "global-context",
    "rand-std",
    "recovery",
] }
revm-inspectors.workspace = true

# tracing
tracing.workspace = true

# io
fdlimit = "0.3.0"
serde.workspace = true
serde_json.workspace = true
confy.workspace = true
toml = { workspace = true, features = ["display"] }

# metrics
metrics-exporter-prometheus = "0.12.1"
metrics-util = "0.15.0"
metrics-process = "=1.0.14"
reth-metrics.workspace = true
metrics.workspace = true
once_cell.workspace = true

# test vectors generation
proptest.workspace = true
rand.workspace = true

# tui
comfy-table = "7.0"
crossterm = "0.27.0"
ratatui = "0.25.0"
human_bytes = "0.4.1"

# async
tokio = { workspace = true, features = [
    "sync",
    "macros",
    "time",
    "rt-multi-thread",
] }
futures.workspace = true
pin-project.workspace = true

# http/rpc
hyper = "0.14.25"

# misc
aquamarine.workspace = true
eyre.workspace = true
thiserror.workspace = true
clap = { workspace = true, features = ["derive"] }
tempfile.workspace = true
backon = "0.4"
similar-asserts.workspace = true
humantime = "2.1.0"
itertools.workspace = true
rayon.workspace = true
boyer-moore-magiclen = "0.2.16"

[target.'cfg(not(windows))'.dependencies]
jemallocator = { version = "0.5.0", optional = true }

[dev-dependencies]
jsonrpsee.workspace = true
assert_matches = "1.5.0"

[features]
default = ["jemalloc"]

asm-keccak = ["reth-primitives/asm-keccak"]

jemalloc = ["dep:jemallocator", "reth-node-core/jemalloc"]
jemalloc-prof = ["jemalloc", "jemallocator?/profiling"]

min-error-logs = ["tracing/release_max_level_error"]
min-warn-logs = ["tracing/release_max_level_warn"]
min-info-logs = ["tracing/release_max_level_info"]
min-debug-logs = ["tracing/release_max_level_debug"]
min-trace-logs = ["tracing/release_max_level_trace"]

optimism = [
    "reth-primitives/optimism",
    "reth-revm/optimism",
    "reth-interfaces/optimism",
    "reth-rpc/optimism",
    "reth-rpc-engine-api/optimism",
    "reth-transaction-pool/optimism",
    "reth-provider/optimism",
    "reth-beacon-consensus/optimism",
    "reth-auto-seal-consensus/optimism",
    "reth-network/optimism",
    "reth-network-api/optimism",
    "reth-blockchain-tree/optimism",
    "reth-payload-builder/optimism",
    "reth-optimism-payload-builder/optimism",
    "reth-ethereum-payload-builder/optimism",
    "reth-node-ethereum/optimism",
    "dep:reth-node-optimism",
    "reth-node-core/optimism",
]

# no-op feature flag for switching between the `optimism` and default functionality in CI matrices
ethereum = []

[[bin]]
name = "reth"
path = "src/main.rs"

[[bin]]
name = "op-reth"
path = "src/optimism.rs"
required-features = ["optimism"]
